# Redis Configuration for SMS Marketing Platform v2.0
# Optimized for caching, session management, and Celery task queue

# =============================================================================
# NETWORK AND SECURITY
# =============================================================================

# Network settings
bind 0.0.0.0
port 6379
timeout 300
tcp-keepalive 300
tcp-backlog 511

# Security settings
# requirepass your_redis_password_here  # Uncomment and set password for production
# rename-command FLUSHDB ""             # Disable dangerous commands in production
# rename-command FLUSHALL ""
# rename-command DEBUG ""

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# Daemon mode
daemonize no
supervised no
pidfile /var/run/redis_6379.pid

# Logging
loglevel notice
logfile ""
syslog-enabled no

# Databases
databases 16

# =============================================================================
# MEMORY MANAGEMENT
# =============================================================================

# Memory settings
maxmemory 512mb
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Memory optimization
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000

# =============================================================================
# PERSISTENCE
# =============================================================================

# RDB Snapshots (for data persistence)
save 900 1      # Save if at least 1 key changed in 900 seconds
save 300 10     # Save if at least 10 keys changed in 300 seconds
save 60 10000   # Save if at least 10000 keys changed in 60 seconds

stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir ./

# AOF (Append Only File) - More durable but slower
appendonly no
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# =============================================================================
# REPLICATION
# =============================================================================

# Replication settings (for high availability)
# replicaof <masterip> <masterport>
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-ping-replica-period 10
repl-timeout 60
repl-disable-tcp-nodelay no
repl-backlog-size 1mb
repl-backlog-ttl 3600

# =============================================================================
# CLIENT MANAGEMENT
# =============================================================================

# Client settings
maxclients 10000
tcp-keepalive 300

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Performance settings for SMS Marketing workload
hz 10
dynamic-hz yes

# Lazy freeing (non-blocking deletion)
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no

# Threading (Redis 6.0+)
# io-threads 4
# io-threads-do-reads no

# =============================================================================
# CELERY OPTIMIZATION
# =============================================================================

# Optimizations for Celery task queue usage
# These settings optimize Redis for Celery's usage patterns

# Increase list performance for task queues
list-max-ziplist-size -2
list-compress-depth 0

# Optimize for frequent key expiration (task TTL)
active-expire-effort 1

# =============================================================================
# CACHING OPTIMIZATION
# =============================================================================

# Settings optimized for caching validation results and contact data

# LRU eviction for cache-like behavior
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Optimize for cache hit ratio
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# =============================================================================
# MONITORING AND DEBUGGING
# =============================================================================

# Slow log for performance monitoring
slowlog-log-slower-than 10000  # Log queries slower than 10ms
slowlog-max-len 128

# Latency monitoring
latency-monitor-threshold 100

# =============================================================================
# MODULES AND EXTENSIONS
# =============================================================================

# Load modules (uncomment as needed)
# loadmodule /path/to/redis-module.so

# =============================================================================
# CUSTOM SETTINGS FOR SMS MARKETING PLATFORM
# =============================================================================

# Database allocation for different purposes:
# DB 0: Default (Celery tasks, general caching)
# DB 1: Session storage
# DB 2: Validation result cache
# DB 3: Contact extraction cache
# DB 4: Rate limiting counters
# DB 5: Temporary data
# DB 6-15: Reserved for future use

# Key naming conventions:
# celery:*          - Celery task queue data
# session:*         - User session data
# validation:*      - Platform validation results
# contact:*         - Contact-related cache
# rate_limit:*      - Rate limiting counters
# temp:*            - Temporary data with TTL

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# Uncomment these settings for production deployment

# Security
# requirepass your_strong_redis_password_here
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command EVAL ""
# rename-command DEBUG ""
# rename-command CONFIG "CONFIG_b840fc02d524045429941cc15f59e41cb7be6c52"

# Performance
# maxmemory 2gb
# maxmemory-policy allkeys-lru

# Persistence (choose one)
# Option 1: RDB only (faster, less durable)
# save 900 1
# save 300 10
# save 60 10000
# appendonly no

# Option 2: AOF only (slower, more durable)
# save ""
# appendonly yes
# appendfsync everysec

# Option 3: Both RDB and AOF (balanced)
# save 900 1
# save 300 10
# save 60 10000
# appendonly yes
# appendfsync everysec
# aof-use-rdb-preamble yes

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Current settings optimized for development
# - No password (for easy development)
# - Moderate persistence (RDB snapshots)
# - Reasonable memory limits
# - Detailed logging for debugging

# =============================================================================
# MONITORING INTEGRATION
# =============================================================================

# Settings for monitoring tools (Prometheus, Grafana)
# Enable INFO command for metrics collection
# rename-command INFO ""  # Comment out to allow monitoring

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Backup settings
rdbcompression yes
rdbchecksum yes

# Recovery settings
aof-load-truncated yes
aof-use-rdb-preamble yes

# =============================================================================
# NOTES
# =============================================================================

# This Redis configuration is optimized for:
# - Celery task queue operations
# - Validation result caching
# - Session management
# - Rate limiting
# - Contact extraction caching
#
# Key usage patterns:
# - High-frequency reads and writes for task queue
# - Medium-term caching for validation results
# - Short-term caching for contact extractions
# - Counter operations for rate limiting
#
# Memory usage estimation:
# - Celery tasks: ~50MB (transient)
# - Validation cache: ~200MB (24h TTL)
# - Contact cache: ~100MB (1h TTL)
# - Sessions: ~50MB
# - Rate limiting: ~10MB
# - Overhead: ~100MB
# Total: ~510MB (fits in 512MB limit)
#
# Monitor memory usage with:
# - INFO memory
# - MEMORY USAGE <key>
# - redis-cli --latency-history
